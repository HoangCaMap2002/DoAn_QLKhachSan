// <auto-generated />
using System;
using DoAn_QLKhachSan.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAn_QLKhachSan.Migrations
{
    [DbContext(typeof(QuanLyKhachSanContext))]
    [Migration("20240226090848_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DoAn_QLKhachSan.Models.DatPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BatDau")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoVaTen")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("IdPhong")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KetThuc")
                        .HasColumnType("datetime");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ThanhToan")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("TongTien")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdPhong");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("DatPhong", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.DichVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double?>("GiaTien")
                        .HasColumnType("float");

                    b.Property<string>("TenDichVu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("DichVu", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.GiaoDich", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdDatPhong")
                        .HasColumnType("int");

                    b.Property<int?>("IdDichVu")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ThoiGianGiaoDich")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("IdDichVu");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("GiaoDich", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.HinhAnh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("IdPhong")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("UrlHinhAnh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdPhong");

                    b.ToTable("HinhAnh", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.KhachSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GioiThieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdTinhThanh")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NguoiQuanLy")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("SoSao")
                        .HasColumnType("int");

                    b.Property<string>("TenKhachSan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TieuDe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IdTinhThanh");

                    b.HasIndex("NguoiQuanLy");

                    b.ToTable("KhachSan", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.LoaiPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenLoai")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("LoaiPhong", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.PhanQuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdQuyen")
                        .HasColumnType("int");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdQuyen");

                    b.HasIndex("TenDangNhap");

                    b.ToTable("PhanQuyen", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.Phong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("GiaPhong")
                        .HasColumnType("float");

                    b.Property<int?>("IdKhachSan")
                        .HasColumnType("int");

                    b.Property<int?>("IdLoaiPhong")
                        .HasColumnType("int");

                    b.Property<int?>("IdTienNghiPhong")
                        .HasColumnType("int");

                    b.Property<int?>("IdViTri")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TenPhong")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdKhachSan");

                    b.HasIndex("IdLoaiPhong");

                    b.HasIndex("IdTienNghiPhong");

                    b.HasIndex("IdViTri");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.Quyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenQuyen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Quyen", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.TaiKhoan", b =>
                {
                    b.Property<string>("TenDangNhap")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("TenDangNhap");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.TienNghiKhachSan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassIcon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTienNghi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TienNghiKhachSan", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.TienNghiPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClassIcon")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenTienNghi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TienNghiPhong", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.TinhThanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnhDaiDien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("TenTinh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("TinhThanh", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.ViTri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenViTri")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ViTri", (string)null);
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.DatPhong", b =>
                {
                    b.HasOne("DoAn_QLKhachSan.Models.Phong", "IdPhongNavigation")
                        .WithMany("DatPhongs")
                        .HasForeignKey("IdPhong")
                        .HasConstraintName("FK_DatPhong_Phong");

                    b.HasOne("DoAn_QLKhachSan.Models.TaiKhoan", "TenDangNhapNavigation")
                        .WithMany("DatPhongs")
                        .HasForeignKey("TenDangNhap")
                        .HasConstraintName("FK_DatPhong_TaiKhoan");

                    b.Navigation("IdPhongNavigation");

                    b.Navigation("TenDangNhapNavigation");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.GiaoDich", b =>
                {
                    b.HasOne("DoAn_QLKhachSan.Models.DichVu", "IdDichVuNavigation")
                        .WithMany("GiaoDiches")
                        .HasForeignKey("IdDichVu")
                        .HasConstraintName("FK_GiaoDich_DichVu");

                    b.HasOne("DoAn_QLKhachSan.Models.TaiKhoan", "TenDangNhapNavigation")
                        .WithMany("GiaoDiches")
                        .HasForeignKey("TenDangNhap")
                        .HasConstraintName("FK_GiaoDich_TaiKhoan");

                    b.Navigation("IdDichVuNavigation");

                    b.Navigation("TenDangNhapNavigation");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.HinhAnh", b =>
                {
                    b.HasOne("DoAn_QLKhachSan.Models.Phong", "IdPhongNavigation")
                        .WithMany("HinhAnhs")
                        .HasForeignKey("IdPhong")
                        .HasConstraintName("FK_HinhAnh_Phong");

                    b.Navigation("IdPhongNavigation");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.KhachSan", b =>
                {
                    b.HasOne("DoAn_QLKhachSan.Models.TinhThanh", "IdTinhThanhNavigation")
                        .WithMany("KhachSans")
                        .HasForeignKey("IdTinhThanh")
                        .HasConstraintName("FK_KhachSan_TinhThanh");

                    b.HasOne("DoAn_QLKhachSan.Models.TaiKhoan", "NguoiQuanLyNavigation")
                        .WithMany("KhachSans")
                        .HasForeignKey("NguoiQuanLy")
                        .HasConstraintName("FK_KhachSan_TaiKhoan");

                    b.Navigation("IdTinhThanhNavigation");

                    b.Navigation("NguoiQuanLyNavigation");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.PhanQuyen", b =>
                {
                    b.HasOne("DoAn_QLKhachSan.Models.Quyen", "IdQuyenNavigation")
                        .WithMany("PhanQuyens")
                        .HasForeignKey("IdQuyen")
                        .IsRequired()
                        .HasConstraintName("FK_PhanQuyen_Quyen");

                    b.HasOne("DoAn_QLKhachSan.Models.TaiKhoan", "TenDangNhapNavigation")
                        .WithMany("PhanQuyens")
                        .HasForeignKey("TenDangNhap")
                        .IsRequired()
                        .HasConstraintName("FK_PhanQuyen_TaiKhoan");

                    b.Navigation("IdQuyenNavigation");

                    b.Navigation("TenDangNhapNavigation");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.Phong", b =>
                {
                    b.HasOne("DoAn_QLKhachSan.Models.KhachSan", "IdKhachSanNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("IdKhachSan")
                        .HasConstraintName("FK_Phong_KhachSan");

                    b.HasOne("DoAn_QLKhachSan.Models.LoaiPhong", "IdLoaiPhongNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("IdLoaiPhong")
                        .HasConstraintName("FK_Phong_LoaiPhong");

                    b.HasOne("DoAn_QLKhachSan.Models.TienNghiPhong", "IdTienNghiPhongNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("IdTienNghiPhong")
                        .HasConstraintName("FK_Phong_TienNghiPhong");

                    b.HasOne("DoAn_QLKhachSan.Models.ViTri", "IdViTriNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("IdViTri")
                        .HasConstraintName("FK_Phong_ViTri");

                    b.Navigation("IdKhachSanNavigation");

                    b.Navigation("IdLoaiPhongNavigation");

                    b.Navigation("IdTienNghiPhongNavigation");

                    b.Navigation("IdViTriNavigation");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.DichVu", b =>
                {
                    b.Navigation("GiaoDiches");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.KhachSan", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.LoaiPhong", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.Phong", b =>
                {
                    b.Navigation("DatPhongs");

                    b.Navigation("HinhAnhs");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.Quyen", b =>
                {
                    b.Navigation("PhanQuyens");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.TaiKhoan", b =>
                {
                    b.Navigation("DatPhongs");

                    b.Navigation("GiaoDiches");

                    b.Navigation("KhachSans");

                    b.Navigation("PhanQuyens");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.TienNghiPhong", b =>
                {
                    b.Navigation("Phongs");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.TinhThanh", b =>
                {
                    b.Navigation("KhachSans");
                });

            modelBuilder.Entity("DoAn_QLKhachSan.Models.ViTri", b =>
                {
                    b.Navigation("Phongs");
                });
#pragma warning restore 612, 618
        }
    }
}
